name: Release CubicLog

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    # Only run on main branch releases
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Ensure we have the full git history for proper release notes
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build for all platforms
        run: |
          mkdir -p builds
          
          # Linux builds
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o builds/cubiclog-linux-amd64
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o builds/cubiclog-linux-arm64
          
          # Windows builds  
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o builds/cubiclog-windows-amd64.exe
          
          # macOS builds
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o builds/cubiclog-macos-amd64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o builds/cubiclog-macos-arm64

      - name: Compress release files
        run: |
          cd builds
          
          # Windows ZIP
          zip cubiclog-windows-amd64.zip cubiclog-windows-amd64.exe
          
          # Linux TAR.GZ
          tar -czvf cubiclog-linux-amd64.tar.gz cubiclog-linux-amd64
          tar -czvf cubiclog-linux-arm64.tar.gz cubiclog-linux-arm64
          
          # macOS TAR.GZ
          tar -czvf cubiclog-macos-amd64.tar.gz cubiclog-macos-amd64
          tar -czvf cubiclog-macos-arm64.tar.gz cubiclog-macos-arm64
          
          # List files for verification
          ls -la
          cd ..

      - name: Generate checksums
        run: |
          cd builds
          sha256sum *.zip *.tar.gz > checksums.txt
          cat checksums.txt
          cd ..

      - name: Create Release and Upload Binaries
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            builds/*.zip
            builds/*.tar.gz
            builds/checksums.txt
          body: |
            ## CubicLog ${{ github.ref_name }}
            
            A beautifully simple self-hosted logging solution by Mendex.
            
            ### Quick Start
            
            1. Download the binary for your platform below
            2. Run `./cubiclog` (or `cubiclog.exe` on Windows)
            3. Visit http://localhost:8080
            4. That's it! üéâ
            
            ### What's New
            
            - üé® Color-coded log types with full Tailwind CSS palette
            - üîç Enhanced search and filtering
            - üìä Statistics endpoint
            - üì§ CSV/JSON export functionality
            - üßπ Automatic log retention and cleanup
            - ‚öôÔ∏è CLI flags support
            - üåô Beautiful dark mode interface
            
            ### Installation
            
            **Linux/macOS:**
            ```bash
            # Download and extract
            tar -xzf cubiclog-*.tar.gz
            
            # Run
            ./cubiclog
            ```
            
            **Windows:**
            ```cmd
            # Extract ZIP and run
            cubiclog.exe
            ```
            
            **Go Install:**
            ```bash
            go install github.com/mendexio/CubicLog@${{ github.ref_name }}
            ```
            
            ### Verify Download
            
            All binaries include SHA256 checksums for verification:
            ```bash
            sha256sum -c checksums.txt
            ```
            
            ---
            
            **Built with ‚ù§Ô∏è by [Mendex](https://mendex.io)**
            
            *CubicLog - Logging for developers who just want things to work.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Deploy docs to GitHub Pages
  deploy-docs:
    runs-on: ubuntu-latest
    needs: build-and-release
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload docs
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4